Apex Class
TestQualtricsExporter
@isTest
    private class TestQualtricsExporter {
       // CRON expression: midnight on March 15. Because this is a test, job executes immediately after Test.stopTest().
       // =========================================================================
       QualtricsExporter c = new QualtricsExporter();
       public static String CRON_EXP = '0 0 0 15 10 ? 2018';
       static testmethod void test() {
           List<Exporter__c> lstExporters = new List<Exporter__c>();
           lstExporters.add(new Exporter__c(
               Name = 'Qualtrics Participant Batch',
               Report_ID__c = '00Oc0000000UNwZ',
               Automation_ID__c = 'AU_H0VHajveM2mgFqw',
               Attachment_Name__c = 'qualtricsparticipant_batch.csv',
               Email_Subject__c = 'Qualtrics Participant Batch',
               Email_Body__c = 'Qualtrics Batch',
               Email_Recipients__c = 'abc@abc.com'));
            lstExporters.add(new Exporter__c(
               Name = 'Qualtrics Coach Batch',
               Report_ID__c = '00Oc0000000UOfe',
               Automation_ID__c = 'AU_DmcllebCfQeC1lW',
               Attachment_Name__c = 'qualtricscoach_batch.csv',
               Email_Subject__c = 'Qualtrics Coach Batch',
               Email_Body__c = 'Qualtrics Batch',
               Email_Recipients__c = 'abc@abc.com'));
           insert lstExporters;

          
           // Set mock callout class 
           
          
           SingleRequestMock fakeParticipantAPI = new SingleRequestMock(200,
                                                                        'Complete',
                                                                        'Your request completed successfully',
                                                                        null);
           SingleRequestMock fakeCoachAPI = new SingleRequestMock(200,
                                                                         'Complete',
                                                                         'Your request completed successfully',
                                                                         null);
           
           Map<String, HttpCalloutMock> endpoint2TestResp =
               new Map<String,HttpCalloutMock>();
           endpoint2TestResp.put('https://qunip48d9pjhj3wh.eu.qualtrics.com/automations-file-service/automations/' +lstExporters[0].Automation_ID__c+'/files',fakeParticipantAPI);
           endpoint2TestResp.put('https://qunip48d9pjhj3wh.eu.qualtrics.com/automations-file-service/automations/' +lstExporters[1].Automation_ID__c+'/files',fakeCoachAPI);
           
           HttpCalloutMock multiCalloutMock =
               new MultiRequestMock(endpoint2TestResp);
           
           Test.setMock(HttpCalloutMock.class, multiCalloutMock);
          Test.startTest();
     
          // Schedule the test job
          String jobId = System.schedule('ScheduleApexClassTest',
                            CRON_EXP,
                            new QualtricsExporter());
              
          // Get the information from the CronTrigger API object
          CronTrigger ct = [SELECT Id, CronExpression, TimesTriggered,
             NextFireTime
             FROM CronTrigger WHERE id = :jobId];
     
          // Verify the expressions are the same
          System.assertEquals(CRON_EXP,
             ct.CronExpression);
     
          // Verify the job has not run
          System.assertEquals(0, ct.TimesTriggered);
     
          // Verify the next time the job will run
          System.assertEquals('2018-10-15 00:00:00',
             String.valueOf(ct.NextFireTime));
          Test.stopTest();
     
       }
    }
